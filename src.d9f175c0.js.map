{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","timer","document","getElementById","days","hours","minutes","seconds","startBtn","stopBtn","addEventListener","timerPlugin","start","stop","intervalId","intervalIsActive","startTime","Date","now","setInterval","currentTime","timeDiff","mins","secs","timeComponents","updateTimer","clearInterval","time","pad","Math","floor","value","String","padStart","textContent"],"mappings":";AAAA,MAAMA,EAAO,CACTC,MAAOC,SAASC,eAAe,aAC/BC,KAAMF,SAASC,eAAe,QAC9BE,MAAOH,SAASC,eAAe,SAC/BG,QAASJ,SAASC,eAAe,QACjCI,QAASL,SAASC,eAAe,QACjCK,SAAUN,SAASC,eAAe,YAClCM,QAASP,SAASC,eAAe,YAGrCH,EAAKQ,SAASE,iBAAiB,QAAS,KACpCC,EAAYC,UAGhBZ,EAAKS,QAAQC,iBAAiB,QAAS,KACnCC,EAAYE,SAGhB,MAAMF,EAAc,CAChBG,WAAY,KACZC,kBAAkB,EAClBH,QACQ,GAAA,KAAKG,iBACL,OAGEC,MAAAA,EAAYC,KAAKC,MAClBH,KAAAA,kBAAmB,EAEnBD,KAAAA,WAAaK,YAAY,KACpBC,MAAAA,EAAcH,KAAKC,MACnBG,EAAWL,EAAYI,GACvB,KAAEhB,EAAF,MAAQC,EAAR,KAAeiB,EAAf,KAAqBC,GAASC,EAAeH,GAEnDI,EAAY,CAAErB,KAAAA,EAAMC,MAAAA,EAAOiB,KAAAA,EAAMC,KAAAA,KAClC,MAGPV,OACIa,cAAc,KAAKZ,YACdC,KAAAA,kBAAmB,IAKhC,SAASS,EAAeG,GAMb,MAAA,CAAEvB,KALIwB,EAAIC,KAAKC,MAAMH,EAAQ,QAKrBtB,MAJDuB,EAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAIzCL,KAHTM,EAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAG7BJ,KAFfK,EAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAKvD,SAASC,EAAIG,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGrC,SAASR,GAAY,KAAErB,EAAF,MAAQC,EAAR,KAAeiB,EAAf,KAAqBC,IACtCvB,EAAKC,MAAMiC,eAAiB9B,KAAQC,KAASiB,KAAQC;;AC3DzD,aAAA,QAAA","file":"src.d9f175c0.js","sourceRoot":"../src","sourcesContent":["const refs = {\n    timer: document.getElementById('timer - 1'),\n    days: document.getElementById('days'),\n    hours: document.getElementById('hours'),\n    minutes: document.getElementById('mins'),\n    seconds: document.getElementById('secs'),\n    startBtn: document.getElementById('startBtn'),\n    stopBtn: document.getElementById('stopBtn'),\n};\n\nrefs.startBtn.addEventListener('click', () => {\n    timerPlugin.start();\n});\n\nrefs.stopBtn.addEventListener('click', () => {\n    timerPlugin.stop();\n})\n\nconst timerPlugin = {\n    intervalId: null,\n    intervalIsActive: false,\n    start() {\n        if (this.intervalIsActive) {\n            return;\n        }\n\n        const startTime = Date.now();\n        this.intervalIsActive = true;\n\n        this.intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const timeDiff = startTime - currentTime;\n            const { days, hours, mins, secs } = timeComponents(timeDiff);\n\n            updateTimer({ days, hours, mins, secs });\n        }, 1000);\n\n    },\n    stop() {\n        clearInterval(this.intervalId);\n        this.intervalIsActive = false;\n    }\n};\n\n\nfunction timeComponents(time) {\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n};\n\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction updateTimer({ days, hours, mins, secs }) {\n    refs.timer.textContent = `${days}:${hours}:${mins}:${secs}`;\n}\n\n\n\n// new CountdownTimer({\n//     selector: '#timer-1',\n//     targetDate: new Date('Jul 17, 2019'),\n// });","import './js/timer';\n"]}